{"version":3,"sources":["App.tsx","Components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","props","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickSortByAlphabet","setState","ALPHABET","handleClickSortByLength","LENGTH","handleClickReverse","handleClickReset","this","visibleGoods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SDNJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMO,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUV,EAASW,MAHvB,EAMEC,0BAA4B,WAC1B,EAAKC,SAAS,CAAEH,SAAUV,EAASc,YAPvC,EAUEC,wBAA0B,WACxB,EAAKF,SAAS,CAAEH,SAAUV,EAASgB,UAXvC,EAcEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,iBAAmB,WACjB,EAAKL,SAAS,CACZH,SAAUV,EAASW,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EAhEH,SACLjB,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOjB,GAsBzB,OApBAiB,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQb,GACN,KAAKV,EAASc,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKvB,EAASgB,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAIThB,GACFW,EAAaM,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfW,EAsCgBS,CAAkBvB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaV,EAASc,WAGtCmB,QAASd,KAAKP,0BARhB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaV,EAASgB,SAGtCiB,QAASd,KAAKJ,wBARhB,4BAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAavB,IAGjBwB,QAASd,KAAKF,mBARhB,sBAaEP,IAAaV,EAASW,MAAQF,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,iBAHhB,sBAUJ,6BACE,cAAC,EAAD,CAAWf,MAAOiB,aAtF5B,GAAyBc,IAAMC,WE7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3fe47cd6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './Components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleClickReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleClickSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleClickReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <GoodsList goods={visibleGoods} />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}